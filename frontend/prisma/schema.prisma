// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

model User {
  id      Int        @id @unique @default(autoincrement())
  name    String     @unique
  oauthId String
  email   String     @unique
  cards   FsrsCard[]
}

model FsrsCard {
  id             Int           @id @unique @default(autoincrement())
  due            DateTime      @default(now())
  stability      Float         @default(0)
  difficulty     Float         @default(0)
  elapsed_days   Int           @default(0)
  scheduled_days Int           @default(0)
  reps           Int           @default(0)
  lapses         Int           @default(0)
  state          Int           @default(0)
  last_review    DateTime?
  learningCard   LearningCard? @relation(fields: [learningCardId], references: [id])
  learningCardId Int?
  user           User?         @relation(fields: [userId], references: [id])
  userId         Int?
}

model LearningCard {
  id       Int             @id @default(autoincrement())
  word     BilingualText?  @relation("Word")
  level    Int
  examples BilingualText[] @relation("Examples")
  public   Boolean         @default(false)
  fsrsCard FsrsCard[]
}

model BilingualText {
  id               Int           @id @default(autoincrement())
  original         String
  translation      String
  wordOfCard       LearningCard? @relation("Word", fields: [wordOfCardId], references: [id])
  wordOfCardId     Int?          @unique
  examplesOfCard   LearningCard? @relation("Examples", fields: [examplesOfCardId], references: [id])
  examplesOfCardId Int?
}
